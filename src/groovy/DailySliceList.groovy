import org.apache.commons.lang.time.DateUtils/** * @author henning* Class to keep slices for a single day. */public class DailySliceList extends SliceList implements Comparable{    /**     * Date of this day as string yyyy-MM-dd     */    def date        /**     * Date in simple format String     */    def dateString        def setDate(Date newDate){        this.date = newDate        this.dateString = TimeTrackerConstants.dateFormatter.format(newDate)                // TODO: we _could_ now also check , if we have any timeSlices        // not belonging to that date and do something - like throwing an exception        // or removing all the non-matching slices    }            /**     * Compare for sorting - newer Date is higher     */     public int compareTo(Object other){         return(this.getDate().compareTo((Date)other.getDate()))     }        /**     * Constructor without explicit date - date is set from given slice     */    public DailySliceList(TimeSlice timeSlice){        super([timeSlice])        // todo: Must be truncated!        this.setDate(DateUtils.truncate(timeSlice.getStartTime(), Calendar.DATE))    }        /**     * Takes a list of timeslices, and a date and takes care to only     * add the slices matching the given date.     */    public DailySliceList(List timeSlices, Date sliceDate){        this.setDate(sliceDate)                // TODO: filter timeslices - only let in those from today!            }            /**     * Add a slice     */    boolean addSlice(TimeSlice slice){        if (!DateUtils.isSameDay(this.date, slice.startTime)){            return false        }                if(slices.contains(slice)){            return false        }                slices.add(slice)        calculateTimes()        return true    }        /**     * Build a list of DailyLists per Day from a List of Timeslices      */    public static List<DailySliceList> buildDayLists(List mySlices){        List<DailySliceList> allLists = []                        for ( slice in mySlices){            DailySliceList currentList = null                        if (allLists.size() > 0){                currentList = allLists.find{                    it.date.equals(DateUtils.truncate(slice.startTime, Calendar.DATE))                    }                }                        if(currentList == null){                currentList = new DailySliceList(slice)                allLists.add(currentList)                            } else {                currentList.addSlice(slice)                    }        }                return allLists    }    }